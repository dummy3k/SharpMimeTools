07/18/2005
 - [SharpMessage] There may be no Received field.
 - [SharpMimeTools] Date formats are always the same, so is faster to use a static array
   for them.
 - [SharpMimeTools] parseDate: Skip date parsing on empty strings sooner.
 - [SharpMimeTools] parseDate: Remove AM/PM string if found.
 - [SharpMimeTools] parseDate: The log message in case of exception while parsing, now encloses
   the date string so we know exact content.
 - [SharpMimeTools] uncommentString: Skip parsing on empty strings sooner.
 - [SharpMimeTools] uncommentString: Skip parsing strings without brackets as those aren't commented.
 - [SharpMimeMessageStream] Buffer last read line when discarding a read operation to avoid some
   unnecessary seeks/buffer discards in the stream. This should give a performance boost reading headers.
 - [SharpMimeMessageStream] Discard line data when it's a dot.
 - [SharpMimeMessageStream] When reading several lines, record the start point of the read operation
   properly.
 - [SharpMimeMessageStream] When reading folded lines, use lazy StringBuffer allocation. Then single line reads
   (not folded) should be faster.
 - [SharpMimeMessage] Do not remove trailing dot when reading body as this is handled in the stream.

07/16/2005
 - Implemented the SharpMessage as a general purpose parser. It only exposes
   the basic content: Subject, from, body, attachments, etc. All the mime complexity
   is handled internally and all the content is exposed parsed and decoded.
 - Generated a key pair and referenced in AssemblyInfo.cs so the compiled dll has
   strong name.
 - Version number set to 0.2
 - Released as version 0.2b (489)

07/10/2005
 - QuotedPrintable2Unicode is now rewritten using a StringBuilder. This should improve
   the performance when there are lots of replacements to do. It also avoids partial decodes.
 - [SF BUG - 1234080] QuotedPrintable2Unicode now takes care of the different possible sizes
   that a replaced item can have. Thanks Zvika Rap for the heads up.

06/12/2005
 - Bugfix: rfc2047decode wasn't following section 5 rule (1) properly.
   Thanks Christophe Delaforge for taking this to my attention.
 - [nant] Reorganized the documenter settings and changed the output format to Web.
   (the .chm file was failing due to some unknown issue)

05/04/2005
 - Bugfix: While decoding malformed base64 parts exceptions must be caught.
 - SharpMimeMessage: Added Close method. It clears the parts references.

04/22/2005
 - Bugfix: The message top level mime type was not being handled properly while parsing.

01/23/2005
 - Adjusted part of the ABNF syntax to a equivalent but more readable one.
 - Added the ABNF definition for comment.
 - Bugfix: The ABNF definition for dcontent had a missing ].
 - Removed redundant brackets and quantifiers to several ABNF items.
 - Other minor improvements to the ABNF items to get better performance.
 - Added static Regex for address definition.
 - Use the above in SharpMimeAddressCollection constructor.
 
01/02/2005
 - Update copyright notice.
 - [nant] Define build simbols RELEASE, NET_1_1, NET_2_0, MONO_1_0, MONO_2_0, API_1_1 and API_2_0.

12/19/2004
 - Added Contains method to header class.
 - When a header with the same name is found more than once, concatenate the content
   with CRLF separation.

12/18/2004
 - Bugfix: ABNF definition of atom was missing the CFWS part.

12/12/2004
 - .NET 2.0 Regex parser did not like an ABNF entry.
 - Added nant build targets for .NET 2.0 and Mono 2.0
 - Build the documentation for Mono now that it works.
 - Build different documentation for each framework version.

11/08/2004
 - Added nant build file.

10/15/2004
 - Bugfix: Actual ABNF definition of mailbox (RFC 2822 Section 3.2.6) was too
   hard for .NET regex engine. Thanks Chris Slatt for taking this to my attention
   and helping in the debug process.

08/14/2004
 - Fixed a difference in the way mono handles timezones in the date parser.
   It is caused by MS not following there own spec.

08/04/2004
 - Fixed the quoted-printable decoder definition
 - Bugfix: double dot at the beginning of lines where not being handled.
   Not sure how this code disappeared.

07/10/2004
 - Added more ABNF definitions for RFC 2822 and make all groups without
   capture
 - Bugfix: Address list parsing was a bit simplistic, now it is based on
   a regex

06/30/2004
 - Added Copyright notice to all source files
 - Added initial comments to public members

06/23/2004
 - Bugfix: Content-Transfer-Encoding was not being considered case
   insensitive

05/28/2004
 - Filled readme.txt

05/21/2004
 - Avoid several errors compiling with mono 0.91

05/11/2004
 - Minor cleanups
 - Skip the status response from servers if it is there
 - Bugfix: An extra CRLF was being added when reading bodies at the
   begining

05/10/2004
 - Added ReleaseMono and DebugMono configs to project
 - Cleanup some unused code
 
05/09/2004
 - Name Property removes Invalid Chars
 - Autogenerate attachment filename when there is no valid one
 - addr_spec ABNF definition added
 - Better cleanup of temp files when decoding attachments

05/04/2004
 - It is possible to write a part into a folder if there
   is a name present in headers
 - Added docs (readme and todo) to project

05/01/2004
 - Now ussing SharpDevelop

04/27/2004
 - Added ReturnPath property
 - Merged SharpMimeDecoders and SharpMimeParsers into SharpMimeTools

04/26/2004
 - Added doc folder, todo.txt and readme.txt to project
 - Project branded as SharpMimeTools
 - Namespace branded as anmar.SharpMimeTools

04/25/2004
 - Name property tries to discard any folder information. If disallowed
   characters are found, Name returns null

04/23/2004
 - Comments removed by default from Header object properties. Raw text is
   accessible from the indexer

04/18/2004 
 - Implemented Content-Transfer-Encoding quoted-printable on attachments
 - Name property takes into account Content-Location value

04/17/2004
 - Added some log4net statements
 - Code cleanups of debug info
 - Implemented enumerable Address parser that can be bound to controls

04/14/2004
 - Implemented Content-Transfer-Encoding 7bit, 8bit and binary
 - Some cleanups of old code
 - Renamed some Properties
 - Redefined the accessibility level of some classes, methods, etc.
 - Use System.String.Empty instead of ""

04/13/2004
 - Minor fixes

04/12/2004
 - Always apply RFC 2047 decoding when parsing header fields

04/10/2004
 - Fixed a bug in the quoted-printable decoder
 - Size property of message part implemented
 
04/09/2004
 - Fixed a bug in the quoted-printable decoder
 - Fixed a bug in the From field parser
 - Fixed a bug in the Name property

04/08/2004
 - Generic header field body parsing
 - Content-Disposition and Content-Location parsed when the headers are parsed
 - Name property of message part implemented
 - Parts property of message part implemented
 - It is possible to write a body into a stream

04/06/2004
  - Minor fixes
 
04/05/2004
 - Minor fixes

04/04/2004
- Fixed a bug in the rfc2047 decoder
- Added Assembly info

04/03/2004
 - Buffered reading improves performance in 50% when decoding
   messages linearly

03/31/2004
 - The parser is now recursive
 - Now the date parser is also compatible with RFC 822

03/30/2004
 - Some improvements to the parser

03/29/2004
 - Project forked from the existing codebase in CTNWebMail.NET
 - Reorganization of the files
 - Mayor rewrite of the code. It now looks much better :)
 - Added license.txt
